- start_date = params[:start_date].to_datetime.strftime('%F') if params[:start_date]
- start_time = params[:start_date].to_datetime.strftime('%I:%M %p') if params[:start_date]
- end_time = (params[:start_date].to_datetime + 30.minutes).strftime('%I:%M %p') if params[:start_date]
= bootstrap_form_for [:providers, event], html: {class: 'form-horizontal', novalidate: 'novalidate'} do |f|
  .row
    .col-md-6
      = f.text_field :name, class: 'span5'
      = f.text_area :description, class: 'span5', rows: 5
      = #f.select :location_id, options_from_collection_for_select(Place.all, 'id', 'name', f.object.location_id), include_blank: true
      = #f.select :host_id, options_from_collection_for_select(Place.all, 'id', 'name', f.object.host_id), include_blank: true
      %input{:name => "twitter", :type => "checkbox", :value => "Twitter"} Twitter
      %input{:name => "facebook", :type => "checkbox", :value => "Facebook"} Facebook
      %input{:name => "linkedin", :type => "checkbox", :value => "LinkedIn"} LinkedIn
    .col-md-6
      = f.check_box :is_all_day
      - if params[:start_date]
        = f.text_field :from_date, {style: 'width:auto;', :class => 'datepicker', :value => "#{start_date}"}
      - else
        = f.text_field :from_date, {style: 'width:auto;', :class => 'datepicker'}
      .event_time
        - if params[:start_date]
          = f.text_field :from_time, {style: 'width:auto;', :class => 'timepicker', :value => "#{start_time}"}
        - else
          = f.text_field :from_time, {style: 'width:auto;', :class => 'timepicker'}
      - if params[:start_date]
        = f.text_field :to_date, {style: 'width:auto;', :class => 'datepicker', :value => "#{start_date}"}
      - else
        = f.text_field :to_date, {style: 'width:auto;', :class => 'datepicker'}
      .event_time
        - if params[:start_date]
          = f.text_field :to_time, {style: 'width:auto;', :class => 'timepicker', :value => "#{end_time}"}
        - else
          = f.text_field :to_time, {style: 'width:auto;', :class => 'timepicker'}
      .event_time
        = f.time_zone_select :time_zone, ActiveSupport::TimeZone.us_zones, :default => "Eastern Time (US & Canada)"
      = f.select :repeats, Schedule::RepeatsOptions
      = render partial: 'repeats_daily_options', locals: {f: f}
      = render partial: 'repeats_weekly_options', locals: {f: f}
      = render partial: 'repeats_monthly_options', locals: {f: f}
      = render partial: 'repeats_yearly_options', locals: {f: f}
      #repeats_options.event_option
        = f.select :repeat_ends, Schedule::RepeatEndsOptions
        #event_repeat_ends_on
          = f.date_select :repeat_ends_on, {}, {style: 'width:auto;'}

  .form-actions
    = link_to 'Cancel', root_path, :class => 'btn'
    = f.submit 'Save'
- content_for :first_styles do
  :css
    #repeats_options {display:none;}
    #repeats_daily_options {display:none;}
    #repeats_weekly_options {display:none;}
    #repeats_monthly_options {display:none;}
    #repeats_yearly_options {display:none;}

